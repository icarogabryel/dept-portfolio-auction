version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - app-network

  backend:
    build: ./backend
    command: daphne -b 0.0.0.0 -p 8000 config.asgi:application
    volumes:
      - ./backend:/app
      - backend-db:/app/data
      - static-files:/app/staticfiles
    ports:
      - "8000:8000"
    environment:
      - SECRET_KEY=django-secret-key
      - DEBUG=True
      - ALLOWED_HOSTS=backend,localhost,127.0.0.1
      - DATABASE_URL=sqlite:///data/db.sqlite3
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CHANNELS_BACKEND_URL=redis://redis:6379/1
      - CHANNELS_LAYERS_BACKEND=channels_redis.core.RedisChannelLayer
      - CORS_ALLOWED_ORIGINS=http://localhost,http://localhost:3000
    depends_on:
      - redis
    networks:
      - app-network

  celery-worker:
    build: ./backend
    command: celery -A config worker --loglevel=info
    volumes:
      - ./backend:/app
      - backend-db:/app/data
    environment:
      - SECRET_KEY=django-secret-key
      - DEBUG=True
      - ALLOWED_HOSTS=backend,localhost,127.0.0.1
      - DATABASE_URL=sqlite:///data/db.sqlite3
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CHANNELS_BACKEND_URL=redis://redis:6379/1
      - CHANNELS_LAYERS_BACKEND=channels_redis.core.RedisChannelLayer
      - CORS_ALLOWED_ORIGINS=http://localhost,http://localhost:3000
    depends_on:
      - redis
      - backend
    networks:
      - app-network

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost/api
      - NEXT_PUBLIC_WS_URL=ws://localhost/ws
    depends_on:
      - backend
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static-files:/static:ro
    depends_on:
      - backend
      - frontend
    networks:
      - app-network

volumes:
  backend-db:
  static-files:

networks:
  app-network:
    driver: bridge
